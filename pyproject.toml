[tool.poetry]
name = "vcspull"
version = "1.13.0a11"
description = "Manage and sync multiple git, mercurial, and svn repos"
license = "MIT"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
]
packages = [
  { include = "vcspull" },
]
include = [
  { path = "tests", format = "sdist" },
]
readme = 'README.md'
keywords = [
  "vcspull",
  "vcs",
  "git",
  "svn",
  "subversion",
  "hg",
  "mercurial",
  "manage",
  "manager",
  "sync",
  "fetcher",
  "updater",
  "json",
  "yaml",
]

homepage = "https://vcspull.git-pull.com"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/vcs-python/vcspull/issues"
Documentation = "https://vcspull.git-pull.com"
Repository = "https://github.com/vcs-python/vcspull"
Changes = "https://github.com/vcs-python/vcspull/blob/master/CHANGES"

[tool.poetry.scripts]
vcspull = 'vcspull:cli.cli'

[tool.poetry.dependencies]
python = "^3.9"
click = "~8"
kaptan = "*"
libvcs = "0.14.0a2"
colorama = ">=0.3.9"

[tool.poetry.dev-dependencies]
### Docs ###
sphinx = "*"
furo = "*"
sphinx-autoapi = "*"
sphinx-autobuild = "*"
sphinx-autodoc-typehints = "*"
sphinx-click = "*"
sphinx-issues = "*"
sphinx-inline-tabs = "*"
sphinxext-opengraph = "*"
sphinx-copybutton = "*"
sphinxext-rediraffe = "*"
myst_parser = "*"

### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-watcher = "^0.2.3"

### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = "*"

### Format ###
black = "*"
isort = "*"

### Lint ###
flake8 = "*"
mypy = "*"

[tool.poetry.extras]
docs = [
  "sphinx",
  "sphinx-issues",
  "sphinx-click",
  "sphinx-autoapi",
  "sphinx-autodoc-typehints",
  "sphinx-autobuild",
  "sphinxext-rediraffe",
  "sphinx-copybutton",
  "sphinxext-opengraph",
  "sphinx-inline-tabs",
  "myst_parser",
  "furo",
]
test = ["pytest", "pytest-rerunfailures", "pytest-watcher"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = ["flake8", "mypy"]

[build-system]
requires = ["poetry_core>=1.0.0", "setuptools>50"]
build-backend = "poetry.core.masonry.api"
